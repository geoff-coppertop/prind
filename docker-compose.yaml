## Common Templates
x-klipper-svc: &klipper-svc
  image: mkuf/klipper:nightly
  container_name: klipper
  restart: unless-stopped
  command:
    - "-I"
    - "run/klipper.tty"
    - "-a"
    - "run/klipper.sock"
    - "cfg/printer.cfg"

x-ustreamer-svc: &ustreamer-svc
  image: mkuf/ustreamer:nightly
  restart: unless-stopped
  command:
    - "--host=0.0.0.0"
    - "--port=8080"
    - "--slowdown"
    - "--device=/dev/webcam"
    - "--resolution=1280x960"
    - "--format=MJPEG"
    - "--desired-fps=30"
  depends_on:
    - traefik

## Service Definitions
version: "3.4"
services:

  ## Klippy Services
  ##
  klipper:
    <<: *klipper-svc
    volumes:
      - ./config:/opt/cfg
      - run:/opt/run
      - gcode:/opt/gcode
    devices:
      - /dev/ttymxc3:/dev/ttymxc3
    profiles:
      - fluidd
      - mainsail

  klipper-priv:
    <<: *klipper-svc
    privileged: true
    volumes:
      - /dev:/dev
      - ./config:/opt/cfg
      - run:/opt/run
      - gcode:/opt/gcode
    profiles:
      - octoprint

  ## WebApi
  ##
  moonraker:
    image: mkuf/moonraker:nightly
    container_name: moonraker
    restart: unless-stopped
    command:
      - "-c"
      - "cfg/moonraker.cfg"
    depends_on:
      - klipper
      - traefik
    volumes:
      - ./config:/opt/cfg
      - run:/opt/run
      - gcode:/opt/gcode
      - moonraker-db:/opt/db
    profiles:
      - fluidd
      - mainsail
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.moonraker.loadbalancer.server.port=7125"
      - "traefik.http.routers.moonraker.rule=PathPrefix(`/websocket`,`/printer`,`/api`,`/access`,`/machine`,`/server`)"
      - "traefik.http.routers.moonraker.entrypoints=web"

  ## Frontends
  ##
  octoprint:
    image: octoprint/octoprint:minimal
    container_name: octoprint
    restart: unless-stopped
    depends_on:
      - klipper-priv
      - traefik
    privileged: true
    volumes:
      - /dev:/dev
      - run:/opt/run
      - octoprint:/octoprint
    profiles:
      - octoprint
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.octoprint.loadbalancer.server.port=5000"
      - "traefik.http.routers.octoprint.rule=PathPrefix(`/`)"
      - "traefik.http.routers.octoprint.entrypoints=web"

  fluidd:
    image: cadriel/fluidd:latest
    container_name: fluidd
    restart: unless-stopped
    depends_on:
      - moonraker
      - traefik
    profiles:
      - fluidd
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.fluidd.loadbalancer.server.port=80"
      - "traefik.http.routers.fluidd.rule=PathPrefix(`/`)"
      - "traefik.http.routers.fluidd.entrypoints=web"

  mainsail:
    image: mkuf/mainsail:nightly
    container_name: mainsail
    restart: unless-stopped
    depends_on:
      - moonraker
      - traefik
    profiles:
      - mainsail
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.mainsail.loadbalancer.server.port=80"
      - "traefik.http.routers.mainsail.rule=PathPrefix(`/`)"
      - "traefik.http.routers.mainsail.entrypoints=web"

  duetwebcontrol:
    image: mkuf/duetwebcontrol:pre
    container_name: duetwebcontrol
    restart: unless-stopped
    depends_on:
      - traefik
    profiles:
      - duetwebcontrol
    ports:
      - 4750:4750
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.duetwebcontrol.loadbalancer.server.port=4750"
      - "traefik.http.routers.duetwebcontrol.rule=PathPrefix(`/`)"
      - "traefik.http.routers.duetwebcontrol.entrypoints=web"

  ## Accompanying Services/Infra
  ##

  ## Webcam Service
  ustreamer:
    <<: *ustreamer-svc
    container_name: ustreamer
    devices:
      - /dev/video0:/dev/webcam
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.ustreamer.loadbalancer.server.port=8080"
      - "traefik.http.routers.ustreamer.rule=PathPrefix(`/stream`)"
      - "traefik.http.routers.ustreamer.entrypoints=web"

  ## Loadbalancer/Proxy
  traefik:
    image: "traefik:v2.2"
    container_name: "traefik"
    hostname: "traefik"
    command:
      - "--accesslog"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    restart: unless-stopped
    volumes:
        - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  run:
  gcode:
  octoprint:
  moonraker-db:
